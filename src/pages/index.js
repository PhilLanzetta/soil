import React, { useRef, useState, useEffect } from "react"
import { Link, graphql } from "gatsby"
import Seo from "../components/seo"
import * as styles from "../components/index.module.css"
import { motion } from "motion/react"
import { GatsbyImage } from "gatsby-plugin-image"
import HomeTile from "../components/homeTile"

const IndexPage = ({ data }) => {
  const [isAutoScrolling, setIsAutoScrolling] = useState(true)
  const [tileData, setTileData] = useState([])
  const [scrollPosition, setScrollPostion] = useState(0)
  const objectives = data.allContentfulObjective.nodes
  const { aboutText, tiles } = data.contentfulHomePage
  const shuffleData = array => {
    let currentIndex = array.length,
      randomIndex

    // While there remain elements to shuffle.
    while (currentIndex !== 0) {
      // Pick a remaining element.
      randomIndex = Math.floor(Math.random() * currentIndex)
      currentIndex--

      // And swap it with the current element.
      ;[array[currentIndex], array[randomIndex]] = [
        array[randomIndex],
        array[currentIndex],
      ]
    }

    return array
  }

  function insertEveryThird(arr1, arr2) {
    let newArr = []
    let arr2Index = 0

    for (let i = 0; i < arr1.length; i++) {
      newArr.push(arr1[i]) // Add element from the first array

      // Insert from the second array every third position (after 3rd, 6th, etc. elements of arr1)
      if ((i + 1) % 3 === 0 && arr2Index < arr2.length) {
        newArr.push(arr2[arr2Index])
        arr2Index++
      }
    }

    // Add any remaining elements from the second array
    while (arr2Index < arr2.length) {
      newArr.push(arr2[arr2Index])
      arr2Index++
    }

    return newArr
  }

  useEffect(() => {
    const randomTiles = shuffleData(tiles)

    const extraLargeTiles = randomTiles.filter(
      entry => entry.size === "Extra Large"
    )

    const otherTiles = randomTiles.filter(entry => entry.size !== "Extra Large")

    const preparedTiles = insertEveryThird(otherTiles, extraLargeTiles)
    setTileData(preparedTiles)
  }, [])

  useEffect(() => {
    let animationFrameId
    const step = () => {
      if (isAutoScrolling) {
        window.scrollBy({ top: 1, behavior: "auto" })
      }

      animationFrameId = requestAnimationFrame(step)
    }

    animationFrameId = requestAnimationFrame(step)

    // Clean up the animation frame on component unmount
    return () => cancelAnimationFrame(animationFrameId) // Adjust interval duration as needed
  }, [isAutoScrolling])

  useEffect(() => {
    const stopAutoScrollUp = () => {
      const currentScroll = window.scrollY
      if (currentScroll < scrollPosition) {
        setIsAutoScrolling(false)
        setTimeout(() => {
          setIsAutoScrolling(true)
        }, 1000)
      }
      setScrollPostion(currentScroll)
    }

    window.addEventListener("scroll", stopAutoScrollUp)

    return () => {
      window.removeEventListener("scroll", stopAutoScrollUp)
    }
  }, [scrollPosition])

  return (
    <div>
      <div>
        <svg
          className={styles.homeLogo}
          id="logo"
          viewBox="0 0 1698 82"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M1665.28 81.9706C1658.67 81.9706 1652.91 80.7625 1648.01 78.3464C1643.14 75.8947 1639.36 72.5015 1636.66 68.1667C1633.96 63.7964 1632.61 58.7509 1632.61 53.0304V1.2793H1648.65V51.698C1648.65 54.8248 1649.32 57.5962 1650.67 60.0123C1652.06 62.4284 1654 64.3293 1656.48 65.715C1659.01 67.1008 1661.94 67.7936 1665.28 67.7936C1668.65 67.7936 1671.58 67.1008 1674.07 65.715C1676.56 64.3293 1678.49 62.4284 1679.88 60.0123C1681.27 57.5962 1681.96 54.8248 1681.96 51.698V1.2793H1698V53.0304C1698 58.7509 1696.65 63.7964 1693.95 68.1667C1691.25 72.5015 1687.45 75.8947 1682.54 78.3464C1677.64 80.7625 1671.89 81.9706 1665.28 81.9706Z"
            fill="black"
          />
          <path
            d="M1623.33 1.2793V80.6914H1606.92V1.2793H1623.33Z"
            fill="black"
          />
          <path
            d="M1548.57 80.6914V1.2793H1564.98V66.6211H1601.06V80.6914H1548.57Z"
            fill="black"
          />
          <path
            d="M1484.77 81.9704C1477.27 81.9704 1470.68 80.2649 1465 76.8539C1459.35 73.4429 1454.92 68.664 1451.73 62.5171C1448.56 56.3702 1446.98 49.2107 1446.98 41.0385C1446.98 32.5821 1448.62 25.2804 1451.89 19.1335C1455.15 12.9866 1459.63 8.26099 1465.32 4.9566C1471 1.6522 1477.4 0 1484.5 0C1489.05 0 1493.33 0.675092 1497.35 2.02528C1501.36 3.33993 1504.92 5.24085 1508.01 7.72803C1511.13 10.1797 1513.69 13.111 1515.68 16.522C1517.67 19.933 1518.92 23.717 1519.41 27.8742H1502.78C1502.32 25.8489 1501.59 24.0191 1500.6 22.3846C1499.6 20.7147 1498.32 19.2934 1496.76 18.1209C1495.23 16.9484 1493.47 16.0601 1491.49 15.4561C1489.53 14.8165 1487.36 14.4967 1484.98 14.4967C1480.54 14.4967 1476.7 15.5804 1473.47 17.7478C1470.27 19.8797 1467.8 22.9354 1466.06 26.9149C1464.36 30.8588 1463.5 35.5667 1463.5 41.0385C1463.5 46.4748 1464.37 51.1649 1466.12 55.1088C1467.86 59.0528 1470.34 62.1085 1473.58 64.2759C1476.81 66.4077 1480.68 67.4737 1485.2 67.4737C1488.89 67.4737 1492.14 66.7808 1494.95 65.3951C1497.76 63.9739 1499.94 62.0019 1501.5 59.4792C1503.1 56.9209 1503.9 53.9718 1503.9 50.6319L1507.79 50.9517H1486.58V38.4802H1519.95V48.6066C1519.95 55.1799 1518.44 60.9715 1515.42 65.9814C1512.43 70.9913 1508.29 74.9174 1503 77.7599C1497.7 80.5669 1491.63 81.9704 1484.77 81.9704Z"
            fill="black"
          />
          <path
            d="M1381.27 80.6914V1.2793H1413.04C1419.01 1.2793 1424.16 2.34523 1428.49 4.4771C1432.86 6.57344 1436.22 9.57582 1438.57 13.4843C1440.95 17.3571 1442.14 21.9762 1442.14 27.3414C1442.14 32.5645 1440.89 37.0947 1438.41 40.9321C1435.92 44.7694 1432.42 47.7363 1427.91 49.8326C1423.43 51.8934 1418.15 52.9238 1412.08 52.9238H1391.13V39.7595H1412.08C1414.96 39.7595 1417.44 39.2443 1419.54 38.2139C1421.64 37.1835 1423.25 35.7445 1424.39 33.8969C1425.53 32.0137 1426.1 29.8286 1426.1 27.3414C1426.1 24.7832 1425.53 22.598 1424.39 20.7859C1423.25 18.9383 1421.64 17.4993 1419.54 16.4689C1417.44 15.4385 1414.94 14.9233 1412.03 14.9233H1397.69V80.6914H1381.27ZM1426.31 80.6914L1408.13 44.8227H1425.35L1443.9 80.6914H1426.31Z"
            fill="black"
          />
          <path
            d="M1339.33 81.9706C1332.72 81.9706 1326.96 80.7625 1322.06 78.3464C1317.19 75.8947 1313.41 72.5015 1310.71 68.1667C1308.01 63.7964 1306.66 58.7509 1306.66 53.0304V1.2793H1322.7V51.698C1322.7 54.8248 1323.38 57.5962 1324.73 60.0123C1326.11 62.4284 1328.05 64.3293 1330.54 65.715C1333.06 67.1008 1335.99 67.7936 1339.33 67.7936C1342.7 67.7936 1345.64 67.1008 1348.12 65.715C1350.61 64.3293 1352.55 62.4284 1353.93 60.0123C1355.32 57.5962 1356.01 54.8248 1356.01 51.698V1.2793H1372.05V53.0304C1372.05 58.7509 1370.7 63.7964 1368 68.1667C1365.3 72.5015 1361.5 75.8947 1356.6 78.3464C1351.69 80.7625 1345.94 81.9706 1339.33 81.9706Z"
            fill="black"
          />
          <path
            d="M1238.87 80.6914V1.2793H1270.68C1276.37 1.2793 1281.2 2.13204 1285.18 3.83754C1289.2 5.54304 1292.23 7.92362 1294.29 10.9793C1296.35 14.035 1297.39 17.6059 1297.39 21.6919C1297.39 24.7476 1296.8 27.4658 1295.63 29.8463C1294.49 32.1914 1292.85 34.1456 1290.72 35.709C1288.59 37.2724 1286.07 38.4271 1283.15 39.1733V39.2799C1286.39 39.5641 1289.3 40.5057 1291.9 42.1046C1294.49 43.668 1296.53 45.8176 1298.02 48.5535C1299.55 51.2894 1300.32 54.5405 1300.32 58.3068C1300.32 62.7127 1299.25 66.6033 1297.12 69.9788C1295.02 73.3542 1291.9 75.9836 1287.74 77.8667C1283.58 79.7499 1278.5 80.6914 1272.5 80.6914H1238.87ZM1254.91 67.7936H1270.2C1274.43 67.7936 1277.72 66.8876 1280.06 65.0755C1282.41 63.2634 1283.58 60.7052 1283.58 57.4008C1283.58 55.1978 1283.07 53.2969 1282.04 51.698C1281.01 50.0636 1279.51 48.82 1277.56 47.9672C1275.6 47.079 1273.24 46.6348 1270.47 46.6348H1254.91V67.7936ZM1254.91 34.27H1269.46C1271.87 34.27 1273.93 33.8614 1275.64 33.0442C1277.38 32.2269 1278.71 31.0722 1279.64 29.5799C1280.6 28.052 1281.08 26.2755 1281.08 24.2502C1281.08 21.159 1280.05 18.7073 1277.99 16.8952C1275.92 15.0832 1273.08 14.1771 1269.46 14.1771H1254.91V34.27Z"
            fill="black"
          />
          <path
            d="M1162.08 80.6914V1.2793H1179.35L1204.88 41.8914C1205.66 43.135 1206.66 44.805 1207.86 46.9013C1209.07 48.9976 1210.33 51.2539 1211.65 53.67C1213 56.0506 1214.28 58.3601 1215.49 60.5986L1213.62 64.809C1213.51 62.3929 1213.41 59.6215 1213.3 56.4947C1213.19 53.3324 1213.12 50.2945 1213.09 47.381C1213.05 44.4674 1213.03 42.1934 1213.03 40.559V1.2793H1229.4V80.6914H1212.07L1188.94 43.9167C1187.98 42.3888 1186.78 40.3991 1185.32 37.9475C1183.86 35.4603 1182.23 32.6533 1180.42 29.5266C1178.64 26.3643 1176.79 23.0244 1174.87 19.5068L1177.75 17.6414C1177.96 21.5498 1178.12 25.2273 1178.23 28.6738C1178.34 32.0848 1178.41 35.105 1178.44 37.7343C1178.48 40.328 1178.5 42.3711 1178.5 43.8634V80.6914H1162.08Z"
            fill="black"
          />
          <path
            d="M1098.06 80.6914V1.2793H1155.04V15.3496H1114.48V33.737H1152V47.4343H1114.48V66.6211H1155.04V80.6914H1098.06Z"
            fill="black"
          />
          <path
            d="M1051.96 80.6914H1031.44V66.8876H1051.11C1056.43 66.8876 1060.84 65.8927 1064.32 63.903C1067.8 61.8777 1070.4 58.9464 1072.1 55.109C1073.81 51.2361 1074.66 46.5105 1074.66 40.9321C1074.66 35.3537 1073.81 30.6458 1072.1 26.8084C1070.4 22.9711 1067.8 20.0575 1064.32 18.0678C1060.88 16.078 1056.52 15.0832 1051.27 15.0832H1031.07V1.2793H1052.28C1060.24 1.2793 1067.13 2.89596 1072.96 6.1293C1078.78 9.3271 1083.28 13.8929 1086.44 19.8266C1089.6 25.7603 1091.18 32.7954 1091.18 40.9321C1091.18 49.0687 1089.6 56.1216 1086.44 62.0909C1083.28 68.0246 1078.77 72.6081 1072.9 75.8414C1067.08 79.0748 1060.09 80.6914 1051.96 80.6914ZM1040.34 1.2793V80.6914H1023.92V1.2793H1040.34Z"
            fill="black"
          />
          <path
            d="M1014.5 1.2793V80.6914H998.086V1.2793H1014.5Z"
            fill="black"
          />
          <path
            d="M938.303 81.9704C931.517 81.9704 925.725 80.9044 920.928 78.7726C916.132 76.6052 912.454 73.4784 909.896 69.3923C907.338 65.3063 906.059 60.3852 906.059 54.6292H921.888C921.959 57.5427 922.652 60.0299 923.966 62.0907C925.316 64.1515 927.217 65.7326 929.669 66.8341C932.121 67.9356 935.034 68.4863 938.41 68.4863C941.465 68.4863 944.112 68.0777 946.351 67.2605C948.625 66.4077 950.384 65.2174 951.627 63.6896C952.906 62.1618 953.546 60.3674 953.546 58.3066C953.546 56.6011 953.049 55.1266 952.054 53.883C951.094 52.6039 949.566 51.4846 947.47 50.5253C945.409 49.566 942.691 48.731 939.316 48.0204L930.948 46.2083C923.06 44.5028 917.198 41.8202 913.36 38.1605C909.523 34.5008 907.604 29.8284 907.604 24.1434C907.604 19.3112 908.866 15.1007 911.388 11.5121C913.911 7.88792 917.429 5.06319 921.941 3.03791C926.489 1.01264 931.765 0 937.77 0C943.846 0 949.105 1.0304 953.546 3.09121C957.987 5.15202 961.434 8.1011 963.886 11.9385C966.373 15.7403 967.705 20.3061 967.883 25.6357H952.533C952.249 21.8694 950.792 18.9026 948.163 16.7352C945.534 14.5678 942.087 13.4841 937.823 13.4841C935.159 13.4841 932.778 13.9104 930.682 14.7632C928.621 15.5804 926.986 16.7352 925.778 18.2275C924.606 19.7198 924.02 21.4253 924.02 23.344C924.02 24.9784 924.481 26.3997 925.405 27.6077C926.329 28.7802 927.804 29.8106 929.829 30.6989C931.854 31.5872 934.484 32.3867 937.717 33.0973L945.338 34.7495C949.566 35.6733 953.226 36.8103 956.317 38.1605C959.409 39.4751 961.949 41.0563 963.939 42.9039C965.929 44.716 967.403 46.8123 968.362 49.1929C969.322 51.5735 969.801 54.2561 969.801 57.2407C969.801 62.3217 968.522 66.7275 965.964 70.4583C963.441 74.1535 959.817 76.996 955.092 78.9858C950.401 80.9755 944.805 81.9704 938.303 81.9704Z"
            fill="black"
          />
          <path
            d="M844.226 80.6914V1.2793H901.2V15.3496H860.641V33.737H898.162V47.4343H860.641V66.6211H901.2V80.6914H844.226Z"
            fill="black"
          />
          <path
            d="M792.003 80.6914L764.129 1.2793H781.983L794.828 39.9194C796.356 44.7161 797.937 49.9392 799.571 55.5887C801.241 61.2026 803.053 67.3317 805.007 73.976H800.264C802.147 67.3317 803.888 61.2026 805.487 55.5887C807.122 49.9392 808.667 44.7161 810.124 39.9194L822.542 1.2793H840.183L812.895 80.6914H792.003Z"
            fill="black"
          />
          <path
            d="M760.129 1.2793V80.6914H743.714V1.2793H760.129Z"
            fill="black"
          />
          <path
            d="M673.222 15.3496V1.2793H737.764V15.3496H713.727V80.6914H697.312V15.3496H673.222Z"
            fill="black"
          />
          <path
            d="M634.996 81.9704C627.747 81.9704 621.263 80.3182 615.543 77.0138C609.858 73.6739 605.381 68.9482 602.112 62.8369C598.878 56.69 597.262 49.4238 597.262 41.0385C597.262 32.5821 598.878 25.2804 602.112 19.1335C605.381 12.9866 609.858 8.26099 615.543 4.9566C621.263 1.6522 627.747 0 634.996 0C639.65 0 643.967 0.692858 647.947 2.07857C651.926 3.46429 655.444 5.43627 658.5 7.99451C661.591 10.5528 664.114 13.6262 666.068 17.2148C668.022 20.8035 669.319 24.8185 669.958 29.2599H653.383C652.921 26.9149 652.157 24.8363 651.091 23.0242C650.025 21.1766 648.711 19.631 647.147 18.3874C645.584 17.1083 643.79 16.1489 641.764 15.5094C639.775 14.8343 637.59 14.4967 635.209 14.4967C630.697 14.4967 626.841 15.5804 623.644 17.7478C620.481 19.9152 618.047 22.9887 616.342 26.9681C614.636 30.9121 613.784 35.6022 613.784 41.0385C613.784 46.4392 614.619 51.1116 616.289 55.0555C617.994 58.9995 620.446 62.0552 623.644 64.2226C626.841 66.39 630.697 67.4737 635.209 67.4737C637.59 67.4737 639.775 67.1539 641.764 66.5143C643.754 65.8748 645.531 64.9154 647.094 63.6363C648.658 62.3572 649.972 60.8116 651.038 58.9995C652.104 57.1874 652.904 55.1266 653.436 52.8171H669.958C669.319 57.2229 668.022 61.2202 666.068 64.8088C664.114 68.3975 661.591 71.4709 658.5 74.0292C655.408 76.5874 651.873 78.5594 647.894 79.9451C643.95 81.2953 639.65 81.9704 634.996 81.9704Z"
            fill="black"
          />
          <path
            d="M535.812 80.6914V1.2793H592.786V15.3496H552.227V33.737H589.748V47.4343H552.227V66.6211H592.786V80.6914H535.812Z"
            fill="black"
          />
          <path
            d="M499.998 81.864C491.968 81.864 485.626 79.6966 480.972 75.3618C476.352 70.9914 474.043 64.7557 474.043 56.6546V51.2716H489.499V56.7612C489.499 60.4209 490.423 63.2279 492.27 65.1821C494.118 67.1008 496.641 68.0601 499.839 68.0601C503.001 68.0601 505.506 67.1008 507.353 65.1821C509.201 63.2279 510.125 60.4209 510.125 56.7612V1.2793H526.54V56.9744C526.54 64.9689 524.177 71.1158 519.452 75.415C514.726 79.7143 508.242 81.864 499.998 81.864Z"
            fill="black"
          />
          <path
            d="M408.859 80.6914V1.2793H440.678C446.363 1.2793 451.195 2.13204 455.174 3.83754C459.189 5.54304 462.227 7.92362 464.288 10.9793C466.349 14.035 467.379 17.6059 467.379 21.6919C467.379 24.7476 466.793 27.4658 465.62 29.8463C464.483 32.1914 462.849 34.1456 460.717 35.709C458.585 37.2724 456.063 38.4271 453.149 39.1733V39.2799C456.382 39.5641 459.296 40.5057 461.89 42.1046C464.483 43.668 466.526 45.8176 468.019 48.5535C469.547 51.2894 470.311 54.5405 470.311 58.3068C470.311 62.7127 469.245 66.6033 467.113 69.9788C465.016 73.3542 461.89 75.9836 457.732 77.8667C453.575 79.7499 448.494 80.6914 442.49 80.6914H408.859ZM424.902 67.7936H440.198C444.426 67.7936 447.713 66.8876 450.058 65.0755C452.403 63.2634 453.575 60.7052 453.575 57.4008C453.575 55.1978 453.06 53.2969 452.03 51.698C450.999 50.0636 449.507 48.82 447.553 47.9672C445.599 47.079 443.236 46.6348 440.464 46.6348H424.902V67.7936ZM424.902 34.27H439.452C441.868 34.27 443.929 33.8614 445.634 33.0442C447.375 32.2269 448.708 31.0722 449.631 29.5799C450.591 28.052 451.07 26.2755 451.07 24.2502C451.07 21.159 450.04 18.7073 447.979 16.8952C445.918 15.0832 443.076 14.1771 439.452 14.1771H424.902V34.27Z"
            fill="black"
          />
          <path
            d="M364.476 81.9704C357.37 81.9704 350.992 80.3182 345.342 77.0138C339.693 73.6739 335.234 68.9482 331.965 62.8369C328.696 56.69 327.062 49.4238 327.062 41.0385C327.062 32.5821 328.696 25.2982 331.965 19.1868C335.234 13.0399 339.693 8.31429 345.342 5.00989C350.992 1.66996 357.37 0 364.476 0C371.618 0 378.013 1.66996 383.663 5.00989C389.312 8.31429 393.771 13.0399 397.04 19.1868C400.309 25.2982 401.943 32.5821 401.943 41.0385C401.943 49.4594 400.309 56.7255 397.04 62.8369C393.771 68.9482 389.312 73.6739 383.663 77.0138C378.013 80.3182 371.618 81.9704 364.476 81.9704ZM364.476 67.4737C368.562 67.4737 372.186 66.4433 375.348 64.3825C378.511 62.3217 380.98 59.3193 382.757 55.3753C384.533 51.4314 385.421 46.6524 385.421 41.0385C385.421 35.389 384.533 30.5923 382.757 26.6484C380.98 22.6689 378.511 19.6487 375.348 17.5879C372.186 15.5271 368.562 14.4967 364.476 14.4967C360.425 14.4967 356.819 15.5271 353.657 17.5879C350.53 19.6487 348.06 22.6689 346.248 26.6484C344.472 30.5923 343.584 35.389 343.584 41.0385C343.584 46.6524 344.472 51.4314 346.248 55.3753C348.06 59.3193 350.53 62.3217 353.657 64.3825C356.819 66.4433 360.425 67.4737 364.476 67.4737Z"
            fill="black"
          />
          <path
            d="M262.476 80.6914H241.957V66.8876H261.624C266.953 66.8876 271.359 65.8927 274.841 63.903C278.323 61.8777 280.917 58.9464 282.623 55.109C284.328 51.2361 285.181 46.5105 285.181 40.9321C285.181 35.3537 284.328 30.6458 282.623 26.8084C280.917 22.9711 278.323 20.0575 274.841 18.0678C271.395 16.078 267.042 15.0832 261.784 15.0832H241.584V1.2793H262.796C270.755 1.2793 277.648 2.89596 283.475 6.1293C289.302 9.3271 293.797 13.8929 296.959 19.8266C300.122 25.7603 301.703 32.7954 301.703 40.9321C301.703 49.0687 300.122 56.1216 296.959 62.0909C293.797 68.0246 289.285 72.6081 283.422 75.8414C277.595 79.0748 270.613 80.6914 262.476 80.6914ZM250.858 1.2793V80.6914H234.442V1.2793H250.858Z"
            fill="black"
          />
          <path
            d="M225.004 1.2793V80.6914H208.589V1.2793H225.004Z"
            fill="black"
          />
          <path
            d="M150.227 80.6914V1.2793H166.642V66.6211H202.724V80.6914H150.227Z"
            fill="black"
          />
          <path
            d="M105.836 81.9704C98.73 81.9704 92.3521 80.3182 86.7027 77.0138C81.0532 73.6739 76.594 68.9482 73.3252 62.8369C70.0563 56.69 68.4219 49.4238 68.4219 41.0385C68.4219 32.5821 70.0563 25.2982 73.3252 19.1868C76.594 13.0399 81.0532 8.31429 86.7027 5.00989C92.3521 1.66996 98.73 0 105.836 0C112.978 0 119.374 1.66996 125.023 5.00989C130.672 8.31429 135.132 13.0399 138.4 19.1868C141.669 25.2982 143.304 32.5821 143.304 41.0385C143.304 49.4594 141.669 56.7255 138.4 62.8369C135.132 68.9482 130.672 73.6739 125.023 77.0138C119.374 80.3182 112.978 81.9704 105.836 81.9704ZM105.836 67.4737C109.922 67.4737 113.546 66.4433 116.709 64.3825C119.871 62.3217 122.34 59.3193 124.117 55.3753C125.894 51.4314 126.782 46.6524 126.782 41.0385C126.782 35.389 125.894 30.5923 124.117 26.6484C122.34 22.6689 119.871 19.6487 116.709 17.5879C113.546 15.5271 109.922 14.4967 105.836 14.4967C101.786 14.4967 98.1792 15.5271 95.0169 17.5879C91.8902 19.6487 89.4208 22.6689 87.6087 26.6484C85.8321 30.5923 84.9439 35.389 84.9439 41.0385C84.9439 46.6524 85.8321 51.4314 87.6087 55.3753C89.4208 59.3193 91.8902 62.3217 95.0169 64.3825C98.1792 66.4433 101.786 67.4737 105.836 67.4737Z"
            fill="black"
          />
          <path
            d="M32.2445 81.9704C25.4581 81.9704 19.6665 80.9044 14.8698 78.7726C10.0731 76.6052 6.39561 73.4784 3.83736 69.3923C1.27912 65.3063 0 60.3852 0 54.6292H15.8291C15.9002 57.5427 16.5931 60.0299 17.9077 62.0907C19.2579 64.1515 21.1588 65.7326 23.6105 66.8341C26.0621 67.9356 28.9757 68.4863 32.3511 68.4863C35.4068 68.4863 38.0539 68.0777 40.2923 67.2605C42.5663 66.4077 44.3251 65.2174 45.5687 63.6896C46.8478 62.1618 47.4874 60.3674 47.4874 58.3066C47.4874 56.6011 46.99 55.1266 45.9951 53.883C45.0357 52.6039 43.5079 51.4846 41.4116 50.5253C39.3508 49.566 36.6326 48.731 33.2572 48.0204L24.8896 46.2083C17.0017 44.5028 11.139 41.8202 7.30165 38.1605C3.46429 34.5008 1.54561 29.8284 1.54561 24.1434C1.54561 19.3112 2.80696 15.1007 5.32967 11.5121C7.85239 7.88792 11.37 5.06319 15.8824 3.03791C20.4304 1.01264 25.7068 0 31.7116 0C37.7874 0 43.046 1.0304 47.4874 3.09121C51.9288 5.15202 55.3753 8.1011 57.827 11.9385C60.3141 15.7403 61.6466 20.3061 61.8242 25.6357H46.4748C46.1905 21.8694 44.7337 18.9026 42.1044 16.7352C39.4751 14.5678 36.0286 13.4841 31.7649 13.4841C29.1 13.4841 26.7194 13.9104 24.6231 14.7632C22.5623 15.5804 20.9279 16.7352 19.7198 18.2275C18.5473 19.7198 17.961 21.4253 17.961 23.344C17.961 24.9784 18.4229 26.3997 19.3467 27.6077C20.2705 28.7802 21.7451 29.8106 23.7703 30.6989C25.7956 31.5872 28.4249 32.3867 31.6583 33.0973L39.2797 34.7495C43.5079 35.6733 47.1676 36.8103 50.2588 38.1605C53.35 39.4751 55.8905 41.0563 57.8803 42.9039C59.87 44.716 61.3445 46.8123 62.3039 49.1929C63.2632 51.5735 63.7429 54.2561 63.7429 57.2407C63.7429 62.3217 62.4638 66.7275 59.9055 70.4583C57.3828 74.1535 53.7586 76.996 49.033 78.9858C44.3429 80.9755 38.7467 81.9704 32.2445 81.9704Z"
            fill="black"
          />
        </svg>
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1, duration: 1 }}
          className={styles.photoGrid}
        >
          {tileData?.map((tile, index) => (
            <HomeTile key={index} tile={tile} index={index}></HomeTile>
          ))}
        </motion.div>
      </div>
      <div>
        {aboutText && (
          <motion.div
            initial={{ opacity: 0 }}
            transition={{ duration: 1 }}
            whileInView={{ opacity: 1 }}
            viewport={{ once: true }}
            dangerouslySetInnerHTML={{
              __html: aboutText.childMarkdownRemark.html,
            }}
            className={styles.indexAbout}
          ></motion.div>
        )}
      </div>
    </div>
  )
}

export const query = graphql`
  query {
    allContentfulObjective {
      nodes {
        id
        slug
        title
        image {
          description
          gatsbyImageData
        }
      }
    }
    contentfulHomePage {
      aboutText {
        childMarkdownRemark {
          html
        }
      }
      tiles {
        id
        image {
          description
          gatsbyImageData
        }
        videoAspectRatio
        videoLink
        work {
          slug
          title
          city
          country
        }
        size
      }
    }
  }
`

/**
 * Head export to define metadata for the page
 *
 * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/
 */
export const Head = () => <Seo title="Home" />

export default IndexPage
